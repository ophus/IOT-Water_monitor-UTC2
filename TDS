#include <math.h>  // Thư viện toán học cho pow()

#define TdsSensorPin 33
#define VREF 3.3            // Điện áp tham chiếu ADC
#define SCOUNT 15           // Số mẫu lấy trung bình

int analogBuffer[SCOUNT];   // Bộ đệm lưu giá trị ADC
int analogBufferIndex = 0;  
float voltage = 0, tdsValue = 0;

void setup() {
    Serial.begin(115200);
    pinMode(TdsSensorPin, INPUT);
}

void loop() {
    // Lưu giá trị ADC vào bộ đệm
    analogBuffer[analogBufferIndex] = analogRead(TdsSensorPin);
    analogBufferIndex++;
    if (analogBufferIndex == SCOUNT) analogBufferIndex = 0;

    // Lọc giá trị ADC bằng thuật toán trung vị
    int filteredADC = getMedianNum(analogBuffer, SCOUNT);

    // Chuyển đổi từ ADC sang Volt (ESP32 có ADC 12-bit: 0 - 4095)
    voltage = (filteredADC / 4095.0) * VREF;

    // Hiệu chỉnh công thức tính TDS
    tdsValue = 970 * voltage;  // Hệ số hiệu chỉnh mới

    // if (filteredADC == 0) tdsValue = 0; // Nếu ADC đọc 0, đặt TDS = 0

    // Hiển thị kết quả
    Serial.println("=========================");
    Serial.print("Raw ADC Value: "); Serial.println(filteredADC);
    Serial.print("Voltage (V): "); Serial.println(voltage, 3);
    Serial.print("TDS Value: "); Serial.println(tdsValue, 1);
    Serial.println("=========================\n");

    delay(1000);
}

// Hàm lọc trung vị (Median Filter)
int getMedianNum(int bArray[], int iFilterLen) {
    int bTab[iFilterLen];
    for (byte i = 0; i < iFilterLen; i++)
        bTab[i] = bArray[i];

    int i, j, bTemp;
    for (j = 0; j < iFilterLen - 1; j++) {
        for (i = 0; i < iFilterLen - j - 1; i++) {
            if (bTab[i] > bTab[i + 1]) {
                bTemp = bTab[i];
                bTab[i] = bTab[i + 1];
                bTab[i + 1] = bTemp;
            }
        }
    }

    if ((iFilterLen & 1) > 0)
        bTemp = bTab[(iFilterLen - 1) / 2];
    else
        bTemp = (bTab[iFilterLen / 2] + bTab[iFilterLen / 2 - 1]) / 2;

    return bTemp;
}
