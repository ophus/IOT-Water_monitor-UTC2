async function getData() {
    try {
        const response = await fetch("https://esp32-data-receiver.phucminh9395.workers.dev/");
        const data = await response.json();

        if (data.error) {
            console.warn(`‚ö†Ô∏è L·ªói t·ª´ server: ${data.error}`);
            showZeroData();
            return;
        }

        // üîµ N·∫øu t·∫•t c·∫£ gi√° tr·ªã l√† 0 ‚Üí Hi·ªÉn th·ªã 0 thay v√¨ "ESP32 m·∫•t ngu·ªìn"
        if (data.temperature == 0 && data.ph == 0 && data.tds == 0 && data.turbidity == 0) {
            console.warn("‚ö†Ô∏è ESP32 m·∫•t ngu·ªìn!");
            showZeroData();
            return;
        }

        updateElement("tempValue", `${data.temperature} ¬∞C`);
        updateElement("phValue", `${data.ph}`);
        updateElement("tdsValue", `${data.tds} PPM`);
        updateElement("turbidityValue", `${data.turbidity} NTU`);
    } catch (error) {
        console.error("‚ùå Fetch error:", error);
        showZeroData();
    }
}

// üî¥ Khi m·∫•t k·∫øt n·ªëi ho·∫∑c ESP32 m·∫•t ngu·ªìn, hi·ªÉn th·ªã s·ªë 0
function showZeroData() {
    updateElement("tempValue", "0 ¬∞C");
    updateElement("phValue", "0");
    updateElement("tdsValue", "0 PPM");
    updateElement("turbidityValue", "0 NTU");
}

setInterval(getData, 5000);
